<?xml version="1.0" encoding="UTF-8"?>
<MetaInfo version="2.0">
  <Object id="nexacro.LiteDBConnection">
    <ObjectInfo finalclass="false" inheritance="" classname="nexacro.LiteDBConnection" shorttypename="LiteDBConnection" csstypename="" csscontrolname="" group="Object" subgroup="Object" csspseudo="" container="false" composite="false" tabstop="false" cssstyle="false" contents="false" formats="false" contentseditor="" defaultwidth="" defaultheight="" registration="allow" edittype="" useinitvalue="false" popup="false" edittypecomponent="" dblclickevent="" requirement="Windows NRE,Android NRE,iOS/iPadOS NRE" description="It shows the connection information of DB supported on mobile devices." />
    <PropertyInfo>
      <Property name="async" group="" subgroup="" refreshinfo="" displayinfo="" edittype="Boolean" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE" description="This property is used to determine how a LiteDBConnection object performs a requested task." csspropertyname="" normalpropertyname="async" stringrc="false" defaultstringrc="false" />
      <Property name="busytimeout" group="" subgroup="" refreshinfo="" displayinfo="" edittype="Number" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE,iOS/iPadOS NRE" description="This property sets a period of time allowed for receiving a response from the database connected to a LiteDBConnection." csspropertyname="" normalpropertyname="busytimeout" stringrc="false" defaultstringrc="false" />
      <Property name="datasource" group="" subgroup="" refreshinfo="" displayinfo="" edittype="FileName" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the location information of the database to be connected to LiteDBConnection." csspropertyname="" normalpropertyname="datasource" stringrc="false" defaultstringrc="false" />
      <Property name="id" group="Information" subgroup="" refreshinfo="" displayinfo="" edittype="ID" readonly="true" initonly="true" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="true" mandatory="true" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the identification of a LiteDBConnection." csspropertyname="" normalpropertyname="id" stringrc="false" defaultstringrc="false" />
      <Property name="name" group="Information" subgroup="" refreshinfo="" displayinfo="" edittype="String" readonly="false" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to specify the name of a LiteDBConnection." csspropertyname="" normalpropertyname="name" stringrc="false" defaultstringrc="false" />
      <Property name="openflag" group="" subgroup="" refreshinfo="" displayinfo="" edittype="Enum" defaultvalue="openReadWriteCreate" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="OpenFlagType" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set an option for connecting a LiteDBConnection to a database." csspropertyname="" normalpropertyname="openflag" stringrc="false" defaultstringrc="false" />
      <Property name="parent" group="Hidden" subgroup="" refreshinfo="" displayinfo="" edittype="Object" readonly="true" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This read-only property holds the parent object of a LiteDBConnection." csspropertyname="" normalpropertyname="parent" stringrc="false" defaultstringrc="false" />
      <Property name="preconnect" group="" subgroup="" refreshinfo="" displayinfo="" edittype="Boolean" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This property determines whether to connect a LiteDBConnection to the database when the LiteDBConnection is created." csspropertyname="" normalpropertyname="preconnect" stringrc="false" defaultstringrc="false" />
    </PropertyInfo>
    <CSSInfo>
      <PropertyInfo />
    </CSSInfo>
    <StatusInfo />
    <ControlInfo />
    <MethodInfo>
      <Method name="addEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Windows NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to add a handler to a certain event of a LiteDBConnection.">
        <Syntax text="LiteDBConnection.addEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been added to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;If it fails to add a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to add" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="The ID of an event that the handler will be added to" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="begin" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to set a transaction committed to the database connected with a LiteDBConnection.">
        <Syntax text="LiteDBConnection.begin()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="clearEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Windows NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to delete all the event handlers registered in a certain event.">
        <Syntax text="LiteDBConnection.clearEventHandler( strEventID )">
          <Return type="Number" description="It returns the number of deleted event handler functions." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event, all of whose handlers will be deleted" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="close" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to close the database connected with a LiteDBConnection.">
        <Syntax text="LiteDBConnection.close()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="commit" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to commit a transaction to the database connected with a LiteDBConnection.">
        <Syntax text="LiteDBConnection.commit()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="findEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Windows NRE,Android NRE,iOS/iPadOS NRE" description="This method finds a handler in a certain event of a LiteDBConnection and returns the index of the handler.">
        <Syntax text="LiteDBConnection.findEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that you attempt to find.&#xA;&#xA;If the handler does not exist, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="The handler function to find" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you will search to find the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method returns a specific handler from a certain event of a LiteDBConnection by specifying the index number of the handler.">
        <Syntax text="LiteDBConnection.getEventHandler( strEventID, nIdx )">
          <Return type="Object" description="It returns the object of an event handler whose index number is specified. &#xA;&#xA;If there is no handler for the specified index number, it will return &quot;null&quot;." />
          <Arguments>
            <Argument name="nIdx" type="Number" in="false" out="false" option="false" variable="false" description="The index number of the event handler you want to find&#xA;&#xA;The index number begins from 0." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you search for your sought handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="isConnected" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to check whether a LiteDBConnection is connected to a database.">
        <Syntax text="LiteDBConnection.isConnected()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="open" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This is a method of connecting a database to LiteDBConnection.">
        <Syntax text="LiteDBConnection.open( [strDataSource [,constOpenFlag]] )">
          <Return type="Boolean" description="If the method execution is successful, true will be returned.&#xA;&#xA;If the parameter value is set incorrectly, false will be returned." />
          <Arguments>
            <Argument name="constOpenFlag" type="Constant" in="false" out="false" option="false" variable="false" description="Set the options for connecting to the database.&#xA;&#xA;In case LiteDBConnection.openReadWrite or 0 is set, the database will be connected to enable reading and writing.&#xA;In case LiteDBConnection.openReadWriteCreate or 1 is set, the database will be connected to enable reading, writing, and creating files. &#xA;&#xA;If the value is omitted, the openflag property value will be applied." />
            <Argument name="strDataSource" type="String" in="false" out="false" option="false" variable="false" description="This is a string representing the location of a database that will be connected.&#xA;&#xA;The location is specified by using an absolute path or alias.&#xA;If you do not set this parameter, the value of the datasource property will be applied instead." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Windows NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to remove a handler in a certain event of a LiteDBConnection.">
        <Syntax text="LiteDBConnection.removeEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in removing the handler, it will return 1.&#xA;&#xA;Otherwise, it will return 0." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to remove" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="rollback" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to roll back a transaction committed to the database connected with a LiteDBConnection.">
        <Syntax text="LiteDBConnection.rollback()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="setEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="Windows NRE,Android NRE,iOS/iPadOS NRE" description="This method is used to change the first handler in a certain event of a LiteDBConnection.">
        <Syntax text="LiteDBConnection.setEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in changing the first handler, it will return 0.&#xA;&#xA;Otherwise, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function that will replace the existing handler" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the new handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the existing handler" />
          </Arguments>
        </Syntax>
      </Method>
    </MethodInfo>
    <EventHandlerInfo>
      <EventHandler name="onerror" group="" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="The onerror event occurs when a task request to a LiteDBConnection object fails.">
        <Syntax text="LiteDBConnection.onerror(obj:nexacro.LiteDBConnection,e:nexacro.LiteDBErrorEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="obj" type="nexacro.LiteDBConnection" in="false" out="false" option="false" variable="false" description="Event generated Object." />
            <Argument name="e" type="nexacro.LiteDBErrorEventInfo" in="false" out="false" option="false" variable="false" description="Event Object." />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onsuccess" group="" deprecated="false" unused="false" requirement="Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This event occurs when a task requested by a LiteDBConnection is successful.">
        <Syntax text="LiteDBConnection.onsuccess(obj:nexacro.LiteDBConnection,e:nexacro.LiteDBEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="obj" type="nexacro.LiteDBConnection" in="false" out="false" option="false" variable="false" description="Event generated Object." />
            <Argument name="e" type="nexacro.LiteDBEventInfo" in="false" out="false" option="false" variable="false" description="Event Object." />
          </Arguments>
        </Syntax>
      </EventHandler>
    </EventHandlerInfo>
  </Object>
</MetaInfo>
